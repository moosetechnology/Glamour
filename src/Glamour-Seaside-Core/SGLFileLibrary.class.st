Class {
	#name : #SGLFileLibrary,
	#superclass : #WAFileLibrary,
	#category : #'Glamour-Seaside-Core'
}

{ #category : #uploaded }
SGLFileLibrary >> arrowDownPng [
	^ #(137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 15 0 0 0 15 8 6 0 0 0 59 214 149 74 0 0 0 1 115 82 71 66 0 174 206 28 233 0 0 0 4 103 65 77 65 0 0 177 143 11 252 97 5 0 0 0 32 99 72 82 77 0 0 122 38 0 0 128 132 0 0 250 0 0 0 128 232 0 0 117 48 0 0 234 96 0 0 58 152 0 0 23 112 156 186 81 60 0 0 0 7 116 73 77 69 7 217 9 27 8 50 9 233 82 232 197 0 0 0 25 116 69 88 116 83 111 102 116 119 97 114 101 0 80 97 105 110 116 46 78 69 84 32 118 51 46 53 46 53 73 138 252 224 0 0 0 192 73 68 65 84 56 79 99 20 19 17 238 98 96 96 184 8 196 171 95 189 121 251 11 72 227 5 64 245 108 64 5 225 64 108 192 0 228 56 3 241 127 32 126 6 196 181 64 44 134 77 55 80 92 28 136 235 129 248 57 84 189 51 88 29 144 115 24 42 0 50 228 7 16 47 0 98 35 168 156 49 144 189 16 42 14 146 7 225 195 112 11 128 28 23 36 205 48 5 32 250 30 14 113 23 20 215 161 217 142 108 0 58 27 97 43 204 4 60 182 163 107 134 248 21 29 0 13 56 130 195 153 152 126 197 162 217 149 128 102 236 182 34 57 31 151 237 135 8 165 1 80 180 225 178 221 137 160 102 104 220 162 219 126 144 40 141 80 205 232 182 59 18 173 25 205 246 3 36 105 68 179 221 158 100 205 80 3 154 240 105 4 0 224 99 118 136 46 145 128 201 0 0 0 0 73 69 78 68 174 66 96 130) asByteArray
]

{ #category : #uploaded }
SGLFileLibrary >> arrowsPng [
	^ #(137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 39 0 0 0 19 8 3 0 0 0 36 150 228 188 0 0 0 4 103 65 77 65 0 0 177 142 124 251 81 147 0 0 0 32 99 72 82 77 0 0 135 15 0 0 140 15 0 0 253 82 0 0 129 64 0 0 125 121 0 0 233 139 0 0 60 229 0 0 25 204 115 60 133 119 0 0 10 57 105 67 67 80 80 104 111 116 111 115 104 111 112 32 73 67 67 32 112 114 111 102 105 108 101 0 0 72 199 157 150 119 84 84 215 22 135 207 189 119 122 161 205 48 2 82 134 222 187 192 0 210 123 147 94 69 97 152 25 96 40 3 14 51 52 177 33 162 2 17 69 68 154 34 72 80 196 128 209 80 36 86 68 177 16 20 84 176 7 36 8 40 49 24 69 84 44 111 70 214 139 174 172 188 247 242 242 251 227 172 111 237 179 247 185 251 236 189 207 90 23 0 146 167 47 151 151 6 75 1 144 202 19 240 131 60 156 233 17 145 81 116 236 0 128 1 30 96 128 41 0 76 86 70 186 95 176 123 8 16 201 203 205 133 158 33 114 2 95 4 1 240 122 88 188 2 112 211 208 51 128 78 7 255 159 164 89 233 124 129 232 152 0 17 155 179 57 25 44 17 23 136 56 37 75 144 46 182 207 138 152 26 151 44 102 24 37 102 190 40 65 17 203 137 57 97 145 13 62 251 44 178 163 152 217 169 60 182 136 197 57 167 179 83 217 98 238 21 241 182 76 33 71 196 136 175 136 11 51 185 156 44 17 223 18 177 70 138 48 149 43 226 55 226 216 84 14 51 3 0 20 73 108 23 112 88 137 34 54 17 49 137 31 18 228 34 226 229 0 224 72 9 95 113 220 87 44 224 100 11 196 151 114 73 75 207 225 115 19 18 5 116 29 150 46 221 212 218 154 65 247 228 100 165 112 4 2 195 0 38 43 153 201 103 211 93 210 82 211 153 188 28 0 22 239 252 89 50 226 218 210 69 69 182 52 181 182 180 52 52 51 50 253 170 80 255 117 243 111 74 220 219 69 122 25 248 185 103 16 173 255 139 237 175 252 210 26 0 96 204 137 106 179 243 139 45 174 10 128 206 45 0 200 221 251 98 211 56 0 128 164 168 111 29 215 191 186 15 77 60 47 137 2 65 186 141 177 113 86 86 150 17 151 195 50 18 23 244 15 253 79 135 191 161 175 190 103 36 62 238 143 242 208 93 57 241 76 97 138 128 46 174 27 43 45 37 77 200 167 103 164 51 89 28 186 225 159 135 248 31 7 254 117 30 6 65 156 120 14 159 195 19 69 132 137 166 140 203 75 16 181 155 199 230 10 184 105 60 58 151 247 159 154 248 15 195 254 164 197 185 22 137 210 248 17 80 99 140 128 212 117 42 64 126 237 7 40 10 17 32 209 251 197 93 255 163 111 190 248 48 32 126 121 225 42 147 139 115 255 239 55 253 103 193 165 226 37 131 155 240 57 206 37 40 132 206 18 242 51 23 247 196 207 18 160 1 1 72 2 42 144 7 202 64 29 232 0 67 96 6 172 128 45 112 4 110 192 27 248 131 16 16 9 86 3 22 72 4 169 128 15 178 64 30 216 4 10 65 49 216 9 246 128 106 80 7 26 65 51 104 5 199 65 39 56 5 206 131 75 224 26 184 1 110 131 251 96 20 76 128 103 96 22 188 6 11 16 4 97 33 50 68 129 228 33 21 72 19 210 135 204 32 6 100 15 185 65 190 80 16 20 9 197 66 9 16 15 18 66 121 208 102 168 24 42 131 170 161 122 168 25 250 30 58 9 157 135 174 64 131 208 93 104 12 154 134 126 135 222 193 8 76 130 169 176 18 172 5 27 195 12 216 9 246 129 67 224 85 112 2 188 6 206 133 11 224 29 112 37 220 0 31 133 59 224 243 240 53 248 54 60 10 63 131 231 16 128 16 17 26 162 138 24 34 12 196 5 241 71 162 144 120 132 143 172 71 138 144 10 164 1 105 69 186 145 62 228 38 50 138 204 32 111 81 24 20 5 69 71 25 162 108 81 158 168 80 20 11 181 6 181 30 85 130 170 70 29 70 117 160 122 81 55 81 99 168 89 212 71 52 25 173 136 214 71 219 160 189 208 17 232 4 116 22 186 16 93 129 110 66 183 163 47 162 111 163 39 208 175 49 24 12 13 163 141 177 194 120 98 34 49 73 152 181 152 18 204 62 76 27 230 28 102 16 51 142 153 195 98 177 242 88 125 172 29 214 31 203 196 10 176 133 216 42 236 81 236 89 236 16 118 2 251 6 71 196 169 224 204 112 238 184 40 28 15 151 143 171 192 29 193 157 193 13 225 38 113 11 120 41 188 38 222 6 239 143 103 227 115 240 165 248 70 124 55 254 58 126 2 191 64 144 38 104 19 236 8 33 132 36 194 38 66 37 161 149 112 145 240 128 240 146 72 36 170 17 173 137 129 68 46 113 35 177 146 120 140 120 153 56 70 124 75 146 33 233 145 92 72 209 36 33 105 7 233 16 233 28 233 46 233 37 153 76 214 34 59 146 163 200 2 242 14 114 51 249 2 249 17 249 141 4 69 194 72 194 75 130 45 177 65 162 70 162 67 98 72 226 185 36 94 82 83 210 73 114 181 100 174 100 133 228 9 201 235 146 51 82 120 41 45 41 23 41 166 212 122 169 26 169 147 82 35 82 115 210 20 105 83 105 127 233 84 233 18 233 35 210 87 164 167 100 176 50 90 50 110 50 108 153 2 153 131 50 23 100 198 41 8 69 157 226 66 97 81 54 83 26 41 23 41 19 84 12 85 155 234 69 77 162 22 83 191 163 14 80 103 101 101 100 151 201 134 201 102 203 214 200 158 150 29 165 33 52 45 154 23 45 133 86 74 59 78 27 166 189 91 162 180 196 105 9 103 201 246 37 173 75 134 150 204 203 45 149 115 148 227 200 21 201 181 201 221 150 123 39 79 151 119 147 79 150 223 37 223 41 255 80 1 165 160 167 16 168 144 165 176 95 225 162 194 204 82 234 82 219 165 172 165 69 75 143 47 189 167 8 43 234 41 6 41 174 85 60 168 216 175 56 167 164 172 228 161 148 174 84 165 116 65 105 70 153 166 236 168 156 164 92 174 124 70 121 90 133 162 98 175 194 85 41 87 57 171 242 148 46 75 119 162 167 208 43 233 189 244 89 85 69 85 79 85 161 106 189 234 128 234 130 154 182 90 168 90 190 90 155 218 67 117 130 58 67 61 94 189 92 189 71 125 86 67 69 195 79 35 79 163 69 227 158 38 94 147 161 153 168 185 87 179 79 115 94 75 91 43 92 107 171 86 167 214 148 182 156 182 151 118 174 118 139 246 3 29 178 142 131 206 26 157 6 157 91 186 24 93 134 110 178 238 62 221 27 122 176 158 133 94 162 94 141 222 117 125 88 223 82 159 171 191 79 127 208 0 109 96 109 192 51 104 48 24 49 36 25 58 25 102 26 182 24 142 25 209 140 124 141 242 141 58 141 158 27 107 24 71 25 239 50 238 51 254 104 98 97 146 98 210 104 114 223 84 198 212 219 52 223 180 219 244 119 51 61 51 150 89 141 217 45 115 178 185 187 249 6 243 46 243 23 203 244 151 113 150 237 95 118 199 130 98 225 103 177 213 162 199 226 131 165 149 37 223 178 213 114 218 74 195 42 214 170 214 106 132 65 101 4 48 74 24 151 173 209 214 206 214 27 172 79 89 191 181 177 180 17 216 28 183 249 205 214 208 54 217 246 136 237 212 114 237 229 156 229 141 203 199 237 212 236 152 118 245 118 163 246 116 251 88 251 3 246 163 14 170 14 76 135 6 135 199 142 234 142 108 199 38 199 73 39 93 167 36 167 163 78 207 157 77 156 249 206 237 206 243 46 54 46 235 92 206 185 34 174 30 174 69 174 3 110 50 110 161 110 213 110 143 220 213 220 19 220 91 220 103 61 44 60 214 122 156 243 68 123 250 120 238 242 28 241 82 242 98 121 53 123 205 122 91 121 175 243 238 245 33 249 4 251 84 251 60 246 213 243 229 251 118 251 193 126 222 126 187 253 30 172 208 92 193 91 209 233 15 252 189 252 119 251 63 12 208 14 88 19 240 99 32 38 48 32 176 38 240 73 144 105 80 94 80 95 48 37 56 38 248 72 240 235 16 231 144 210 144 251 161 58 161 194 208 158 48 201 176 232 176 230 176 249 112 215 240 178 240 209 8 227 136 117 17 215 34 21 34 185 145 93 81 216 168 176 168 166 168 185 149 110 43 247 172 156 136 182 136 46 140 30 94 165 189 42 123 213 149 213 10 171 83 86 159 142 145 140 97 198 156 136 69 199 134 199 30 137 125 207 244 103 54 48 231 226 188 226 106 227 102 89 46 172 189 172 103 108 71 118 57 123 154 99 199 41 227 76 198 219 197 151 197 79 37 216 37 236 78 152 78 116 72 172 72 156 225 186 112 171 185 47 146 60 147 234 146 230 147 253 147 15 37 127 74 9 79 105 75 197 165 198 166 158 228 201 240 146 121 189 105 202 105 217 105 131 233 250 233 133 233 163 107 108 214 236 89 51 203 247 225 55 101 64 25 171 50 186 4 84 209 207 84 191 80 71 184 69 56 150 105 159 89 147 249 38 43 44 235 68 182 116 54 47 187 63 71 47 103 123 206 100 174 123 238 183 107 81 107 89 107 123 242 84 243 54 229 141 173 115 90 87 191 30 90 31 183 190 103 131 250 134 130 13 19 27 61 54 30 222 68 216 148 188 233 167 124 147 252 178 252 87 155 195 55 119 23 40 21 108 44 24 223 226 177 165 165 80 162 144 95 56 178 213 118 107 221 54 212 54 238 182 129 237 230 219 171 182 127 44 98 23 93 45 54 41 174 40 126 95 194 42 185 250 141 233 55 149 223 124 218 17 191 99 160 212 178 116 255 78 204 78 222 206 225 93 14 187 14 151 73 151 229 150 141 239 246 219 221 81 78 47 47 42 127 181 39 102 207 149 138 101 21 117 123 9 123 133 123 71 43 125 43 187 170 52 170 118 86 189 175 78 172 190 93 227 92 211 86 171 88 187 189 118 126 31 123 223 208 126 199 253 173 117 74 117 197 117 239 14 112 15 220 169 247 168 239 104 208 106 168 56 136 57 152 121 240 73 99 88 99 223 183 140 111 155 155 20 154 138 155 62 28 226 29 26 61 28 116 184 183 217 170 185 249 136 226 145 210 22 184 69 216 50 125 52 250 232 141 239 92 191 235 106 53 108 173 111 163 181 21 31 3 199 132 199 158 126 31 251 253 240 113 159 227 61 39 24 39 90 127 208 252 161 182 157 210 94 212 1 117 228 116 204 118 38 118 142 118 69 118 13 158 244 62 217 211 109 219 221 254 163 209 143 135 78 169 158 170 57 45 123 186 244 12 225 76 193 153 79 103 115 207 206 157 75 63 55 115 62 225 252 120 79 76 207 253 11 17 23 110 245 6 246 14 92 244 185 120 249 146 251 165 11 125 78 125 103 47 219 93 62 117 197 230 202 201 171 140 171 157 215 44 175 117 244 91 244 183 255 100 241 83 251 128 229 64 199 117 171 235 93 55 172 111 116 15 46 31 60 51 228 48 116 254 166 235 205 75 183 188 110 93 187 189 226 246 224 112 232 240 157 145 232 145 209 59 236 59 83 119 83 238 190 184 151 121 111 225 254 198 7 232 7 69 15 165 30 86 60 82 124 212 240 179 238 207 109 163 150 163 167 199 92 199 250 31 7 63 190 63 206 26 127 246 75 198 47 239 39 10 158 144 159 84 76 170 76 54 79 153 77 157 154 118 159 190 241 116 229 211 137 103 233 207 22 102 10 127 149 254 181 246 185 206 243 31 126 115 252 173 127 54 98 118 226 5 255 197 167 223 75 94 202 191 60 244 106 217 171 158 185 128 185 71 175 83 95 47 204 23 189 145 127 115 248 45 227 109 223 187 240 119 147 11 89 239 177 239 43 63 232 126 232 254 232 243 241 193 167 212 79 159 254 5 3 152 243 252 186 196 232 211 0 0 3 0 80 76 84 69 0 0 0 37 37 37 38 38 38 89 89 89 132 132 132 149 149 149 150 150 150 159 159 159 164 164 164 165 165 165 167 167 167 230 230 230 233 233 233 234 234 234 251 251 251 252 252 252 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 110 174 208 68 0 0 1 0 116 82 78 83 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 255 0 83 247 7 37 0 0 0 9 112 72 89 115 0 0 11 18 0 0 11 18 1 210 221 126 252 0 0 0 25 116 69 88 116 83 111 102 116 119 97 114 101 0 80 97 105 110 116 46 78 69 84 32 118 51 46 53 46 53 73 138 252 224 0 0 0 99 73 68 65 84 40 83 197 210 75 14 128 32 12 4 80 24 252 161 34 247 63 45 178 192 104 237 36 116 71 151 228 209 76 41 174 216 202 217 88 25 236 34 141 137 247 180 229 139 59 129 240 218 165 85 65 4 210 239 74 243 15 34 48 151 243 49 9 88 25 239 183 72 230 81 75 231 59 117 62 113 175 205 187 177 121 191 240 121 151 222 154 7 239 183 23 207 252 255 110 230 158 181 143 132 192 216 14 0 0 0 0 73 69 78 68 174 66 96 130) asByteArray
]

{ #category : #uploaded }
SGLFileLibrary >> closeButtonPng [
	^ #(137 80 78 71 13 10 26 10 0 0 0 13 73 72 68 82 0 0 0 16 0 0 0 16 8 6 0 0 0 31 243 255 97 0 0 0 9 112 72 89 115 0 0 11 19 0 0 11 19 1 0 154 156 24 0 0 0 4 103 65 77 65 0 0 177 142 124 251 81 147 0 0 0 32 99 72 82 77 0 0 122 37 0 0 128 131 0 0 249 255 0 0 128 233 0 0 117 48 0 0 234 96 0 0 58 152 0 0 23 111 146 95 197 70 0 0 2 11 73 68 65 84 120 218 164 147 205 106 19 81 24 134 159 153 38 77 171 246 199 230 100 113 194 64 134 64 131 117 155 230 231 10 220 20 138 27 55 21 69 34 34 34 65 232 20 106 47 32 221 182 23 225 21 136 139 222 65 32 63 184 112 229 172 220 212 12 216 56 19 157 152 156 50 201 113 147 134 54 45 8 246 131 179 249 248 206 247 243 240 190 166 214 154 219 60 67 107 205 109 34 54 155 48 12 99 14 216 4 30 0 18 24 3 167 192 87 224 179 214 122 116 165 254 242 6 134 97 44 3 59 192 125 96 0 40 32 186 52 236 23 240 81 107 253 251 226 143 57 51 249 41 176 188 191 191 223 181 109 187 7 244 129 190 148 178 95 171 213 134 64 2 216 154 212 94 59 97 19 88 61 56 56 232 30 30 30 166 29 199 233 23 139 197 174 82 106 220 110 183 83 82 202 149 133 133 133 83 199 113 238 1 15 129 47 87 78 48 12 227 5 176 106 219 118 175 217 108 10 33 196 93 207 243 254 68 81 52 178 44 107 41 8 130 97 169 84 26 184 174 59 4 78 181 214 159 102 27 188 7 122 64 223 182 237 88 163 209 16 169 84 234 14 128 239 251 170 92 46 71 174 235 106 32 0 134 90 235 15 87 24 152 166 169 39 192 34 165 212 185 82 106 74 123 48 24 140 195 48 100 194 68 197 227 241 232 26 196 100 50 233 3 72 41 105 183 219 41 203 178 150 124 223 87 158 231 13 211 233 244 98 171 213 50 51 153 204 24 208 66 136 254 181 6 27 27 27 223 128 152 227 56 9 41 229 74 16 4 195 114 185 28 229 243 249 145 231 121 3 41 229 226 238 238 238 28 144 40 20 10 63 167 232 47 36 217 233 116 172 181 181 181 151 64 229 232 232 232 85 46 151 123 7 236 1 111 50 153 204 235 227 227 227 183 192 158 16 226 153 231 121 214 77 82 54 235 245 122 113 123 123 59 119 118 118 54 15 204 1 163 137 152 0 230 133 16 231 39 39 39 110 62 159 111 78 20 202 172 57 18 97 24 22 42 149 202 86 54 155 125 2 60 7 118 214 215 215 31 87 171 213 71 97 24 22 180 214 137 127 153 201 4 210 128 0 86 39 185 30 240 3 248 62 157 124 147 23 254 39 254 14 0 183 201 40 117 220 189 48 23 0 0 0 0 73 69 78 68 174 66 96 130) asByteArray
]

{ #category : #uploaded }
SGLFileLibrary >> glamourSeasideJs [
	^ '	
	jQuery.glamour = {};	
	
	; ( function($) {
		
		$.glamourTree = {
		
			compare : function(array1, array2) {
 	 			if(!array1 && !array2) return true;
				if(!array1 || !array2) return false;
				
				if (array1.length == array2.length) {
					for(var i = 0; i < array1.length;i++) {
						if(array1[i] != array2[i]) return false;
  					}
					return true;
				} else 
					return false
			} ,
			
			selectNodes: function(presentationId, nodesIds, resetReferenceNode) {
				var rootList = $("#"+presentationId+" > .glm-tree-root-ct")[0];
				var selectedNodes = [];
				var referenceNode;
				
				$.each(nodesIds, function(index, nodeId) {
					var $node = $("#"+nodeId);
				
					if ( $node.size() != 0 ) {
						selectedNodes.push($node);
					}
				});
				
				if ( resetReferenceNode ) {
					referenceNode = $.data(rootList, "referenceNode");
					if ( !referenceNode ) {
						if (selectedNodes.length != 0)  $.data(rootList, "referenceNode", selectedNodes[0]);
					}
				}
				
				performeSelection(rootList, selectedNodes);
			}
		};
	
		$.fn.glamourTree = function(action, options) {
			var opts;
			
			return this.each( function() {
				var childrenCount = 0;
				var rootList = $(this).closest(".glm-tree-root-ct")[0];

				switch (action) {
					case "initialize": {
						opts = initializeOperation(this, rootList, options);
						break;
					}
					
					case "update": {
						opts = updateOperation(this, rootList, options);
						break;
					}
					
					default: {
						return ;
					}
				}
				
				$(this).children(opts.childrenSelector).each( function() {
					var $node = $(this);
					var $content = $node.find(":first");
					
					childrenCount++;
					addPadding($content, opts.level);
					addIcon($content, $node);
					
					// Submit a request when the user selects a node.
					$content.bind("click", function(e) {
						var $referenceNode = $.data(rootList, "referenceNode");
					
						if ( e.shiftKey && opts.isMultiple ) {
							if ($referenceNode) {
								selectNodes(rootList, $referenceNode, $node, opts);
							} else {
								selectNode($node, rootList, opts);
							}
						} else {
							selectNode($node, rootList, opts);
						}
						
						return false;
					});
					
					// Submit a request when the uses expands/collapses a node.
					$content.children(".glm-tree-icon").bind("click", function() {						
						opts.onExpandToggled($node);
						toggleClass($node);
						return false;
					});
				});
				
				$.data(this, "childrenCount",  $.data(this, "childrenCount") + childrenCount );
			});
		};
		
		$.fn.glamourTree.defaults = {
			"level" :0 ,
			"childrenSelector" : ".glm-tree-node",
			"isMultiple" : false,
			"selectedNodes:" : [] 
		};
		
		function selectNodes(rootList, $referenceNode, $node, opts) {
			var $allNodeChildren = $("#"+$(rootList).attr("id")+" .glm-tree-node");
			var selectedNodes;
			var index, ids = "";
								
			"Obtain a list with all the selected nodes and send it to the server"
			if ( $allNodeChildren.index($referenceNode) < $allNodeChildren.index($node) ) {
				selectedNodes = obtainNodes($referenceNode, $node);
			} else {
				selectedNodes = obtainNodes($node, $referenceNode);									
			}
			
			for (index = 0; index < selectedNodes.length - 1; index++) {
				ids += selectedNodes[index].attr("id") + ",";
			}
			ids += selectedNodes[index].attr("id");
			
			opts.onSelect(ids);
		}
		
		function obtainNodes($fromNode, $toNode) {
			var selectedNodes = [$fromNode];
			var $childrenList, $nextSibling, $parent;
			
			while ($fromNode.attr("id") != $toNode.attr("id")) {
				
				$childrenList = $fromNode.children(".glm-tree-node-ct:visible");
				if ( $childrenList.size() > 0 ) {
					$fromNode = $childrenList.children(":eq(0)");
					selectedNodes.push($fromNode);
					continue;
				}
				
				$nextSibling = $fromNode.next();
				if ( $nextSibling.size() > 0 ) {
					$fromNode = $nextSibling;
					selectedNodes.push($fromNode);
					continue;
				} else {
					$parent = $fromNode.parent().parent();
					while ( $parent.next().size() == 0 ) {
						$parent = $parent.parent().parent();
					}
					$fromNode = $parent.next();
					selectedNodes.push($fromNode);
				}
			}
			
			return selectedNodes;
		};
		
		function selectNode($node, rootList, opts) {
			$.data(rootList, "referenceNode", $node);
			opts.onSelect($node.attr("id"));	
		};
		
		function performeSelection(rootList, nodes) {
			var savedSelectedNodes = $.data(rootList, "selectedNodes");
			
			$.each(savedSelectedNodes, function(index, $node) {
				$node.removeClass("glm-tree-node-selected");
			});
			$.each(nodes, function(index, $node) {
				$node.addClass("glm-tree-node-selected");
			});
			
			if ( nodes.length == 0 ) {
				$.data(rootList, "referenceNode", null);
			}
			$.data(rootList, "selectedNodes", nodes);
		};
		
		function initializeOperation(list, rootList, options) {
			var savedOpts = $.data(rootList, "options");
			var opts =  $.extend({}, $.fn.glamourTree.defaults, savedOpts, options);
				
			if ( savedOpts == null ) {
				$.data(rootList, "selectedNodes", []);	
				$.glamourTree.selectNodes(rootList.parentNode.id, opts.selectedNodes, true);
				opts.selectedNodes = [];
				$.data(rootList, "options", opts);
			 }
			$.data(list, "childrenCount", 0);
			return opts;
		};
		
		function updateOperation(list, rootList, options) {
			var savedOpts = $.data(rootList, "options");
			var opts = $.extend({},  savedOpts, options);

			opts.childrenSelector = ".glm-tree-node:gt(" + ( $.data(list, "childrenCount") - 1) + ")";
			return opts;
		};
		
		function addPadding($nodeContent, level) {
			var padding = "";
			
			for (var index = 0; index < level; index++) {
				padding += "<ins class=\"glm-tree-icon-padding\">&nbsp</ins>";
			}
			$nodeContent.find(":first").before("<span>"+padding+"</span>");
		};
		
		function addIcon($nodeContent, $node) {
			if ( $node.hasClass("glm-tree-leaf") == false ) {
				$nodeContent.children(":eq(1)").before("<ins class=\"glm-tree-icon\">&nbsp;</ins>");
			}
		};
		
		function toggleClass($node) {
			if ( $node.hasClass("glm-tree-open") ) {
				$node.removeClass("glm-tree-open");
				$node.addClass("glm-tree-closed");
				$node.children(".glm-tree-node-ct").hide();
			} else if ( $node.hasClass("glm-tree-closed")  ) {
				$node.removeClass("glm-tree-closed");
				$node.addClass("glm-tree-open");
				$node.children(".glm-tree-node-ct").show();
			}
		};
		
	} ) (jQuery);
		
	/**
	 * Glamour Actions:  plugin that adds  adds actions to the glamour presentations.
	 *
	 * Two possible opperations:
	 *
	 * "initialize" : 
	 *		$(selector).glamourActions("initialize", options);
	 *		optionsDefault = { hasActions: false }
	 *
	 * "add" : adds the actions options.actionsContent to the tab with the given index;
	 * if no index is given the actions are aded to the last tab;
	 * if the given tab already has actions assigned they are left unchanged. 
	 *		$(selector).glamourActions("add", index, options)
	 *		optionsDefault = { actionsContent: undefined }
	 *
	 */
	; ( function($) {

		$.fn.glamourActions = function() {
			var args = arguments;
			var opts;
			
			return this.each( function() {
				
				switch ( args[0] ) {
					case "initialize" : {
						this.hasGlamourActions = false;
						if ( args[1] && args[1].hasActions ) {
							initialize(this);
							this.hasGlamourActions = true;
						}
						break;
					}
					case "add" : {
						if ( this.hasGlamourActions ) {
							add(this, args[1], args[2]);
						}
						break;
					}
				}
				
			});
		}
		
		function initialize(tabs) {
			var $tabs = $(tabs);
			var $navigation = $tabs.children(".ui-tabs-nav");
			var $actions = $navigation.children(".glm-actions");
			
			
			$actions.css("float", "right");
			$tabs.children(".ui-tabs-nav").children(":not(.glm-actions)").each(function(index, tab){
				tab.glamourAction = $actions[index]; 
			});
			showActionsForSelectedTab(tabs, $(tabs).tabs( "option", "selected"));
			
			$tabs.bind("tabsshow", function(event, ui) {
				showActionsForSelectedTab(tabs, $.glamourTabs.indexOfTab($navigation.children(".ui-tabs-selected")[0], $(tabs) ) );
			});
			
			$tabs.bind("tabsdeleted", function(event, ui) {
				$(ui.tab.glamourAction).remove();
				delete ui.tab.glamourAction;
			})
		}
		
		function add(tabs, tabIndex, options) {
			var $navigation = $(tabs).children(".ui-tabs-nav");
			var index = typeof tabIndex !== "integer" ? $(tabs).tabs( "length" ) - 1 :  tabIndex;
			var $tab = $navigation.children(".ui-state-default:eq("+index+")");
			var $action;
			
			
			$navigation.append(options.actionsContent);
			$action = $navigation.children(":last");
			$action.css("float", "right");
			$tab[0].glamourAction = $action[0];
		}
		
		function showActionsForSelectedTab(tabs, index) {
			var $navigation = $(tabs).children(".ui-tabs-nav");
			var $selectedTab;
			
			$navigation.children(".glm-action-selected").hide().removeClass("glm-action-selected");
			if ( index > -1 ) {
				$selectedTab = $navigation.children(".ui-state-default:eq("+index+")");			
				$action = $( $selectedTab[0].glamourAction );
				$action.addClass("glm-action-selected");
				$action.show();
			}
		}
		
	})(jQuery);
	
	; ( function($) {		

		$.glamourTabs = {
			indexOfTab : function (tab, $tabs) {
				var $allItems = $tabs.children(".ui-tabs-nav").children(".ui-state-default");
			
				for (var index = 0; index < $allItems.length; index++ ) {
					if ($allItems[index] === tab)
						return index;
				}
			
				return -1;
			}
		}

		$.fn.glamourTabs = function() {
			var options = {}; 
			var args = arguments;
			var result;
			
			if ( args && args[0] === "add" ) {
				if ( typeof args[3] === "object") {
					options = args[3];
					delete args[3];
				} else if ( typeof args[4] === "object") {
					options = args[4];
					delete args[4];
				}
			}
			
			result = this.tabs.apply(this, args);
			
			this.each( function() {
				var $tabs = $(this);
				
				if ( !args ) {
					initialize(this, $.fn.glamourTabs.defaults);
				} else if ( typeof args[0] === "object"  ) {
					initialize(this, $.extend({}, $.fn.glamourTabs.defaults, args[0]) );
				} else if ( typeof args[0] === "string" ) {
					if (args[0] === "add") {
						add(this, args[3], options);
					}
				}
			});
			
			return result;
		}

		function initialize(tabs, options) {
			$(tabs).glamourActions("initialize", options);
			
			if ( options.closable ) {
				$(tabs).children(".ui-tabs-nav").children(".ui-state-default").each(function(index, tab) {			
					addCloseButton(tab, tabs);
				});
			}
			
			$(tabs).bind("tabsremovedlast", function(event) {
				if ( options.ifEmptyDo === "replace" ) {
					$(tabs).replaceWith(options.replaceWith);
				} else if ( options.ifEmptyDo === "remove" ) {
					$(tabs).remove();
				}
			});
			
			if ( options.glmDelete ) {
				$(tabs).bind("tabsdeleted", function(event, ui) {
					options.glmDelete(event, ui);
				});
			}
			
			setTabsWidth(tabs);
		}
		
		function setTabsWidth(tabs) {
			var navigation = $(tabs).children(":first");
			navigation.css("min-width", navigation.glamourWidth()+$.glamourWidth.outerWidth(navigation)+1);
		}
		
		function add(tabs, index, options) {
			var $tab;
			
			$(tabs).glamourActions("add", index, options);
			$tab = $(tabs).children(".ui-tabs-nav").children(".ui-state-default:eq("+ ( typeof index === "integer"? index : $(tabs).tabs("length") - 1 )+")");
			addCloseButton($tab[0], tabs);
		}
		
		function addCloseButton(tab, tabs) {
			var $tab = $(tab);
			
			$tab.append("<span class=\"glm-tabs-close-button\"></span>");
			$tab.children(".glm-tabs-close-button").bind("click", function() {
				var index = $.glamourTabs.indexOfTab(tab, $(tabs) ); 
				
				$(tabs).tabs("remove",  index);
				// Trigger a custom event as in version JQuery-UI 1.8.2 the index of the deleted element is not correctly passed.
				$(tabs).triggerHandler("tabsdeleted", {"tab": tab, "index": index, "panel": tab});
				
				if ( $(tabs).tabs("length") == 0 ) {
					$(tabs).triggerHandler("tabsremovedlast");
				}
			});
		}
		
		$.fn.glamourTabs.defaults = {
			"ifEmptyDo:" : "nothing",
			"replaceWith" : "<div class=\"ui-widget ui-widget-content ui-corner-all empty-presentation\"></div>" ,
			"hasActions" : true ,
			"closable" : false
		}
	
	})(jQuery);
		
	
	;(function($) {
	
		$.glamourWidth = {
			outerWidth : function(node) {
				var width = 0;
				
				width += parseInt(node.css("padding-left"), 10) + parseInt(node.css("padding-right"), 10); 
				width += parseInt(node.css("margin-left"), 10) + parseInt(node.css("margin-right"), 10); 
				width += parseInt(node.css("borderLeftWidth"), 10) + parseInt(node.css("borderRightWidth"), 10); 
				
				return width;
			}
		}
	
		$.fn.glamourWidth = function (childrenSelector) {
			var totalWidth = 0;
			var width = 0;
			
			childrenSelector = childrenSelector || ":visible";
			this.children(childrenSelector).each(function(){
				var width;

				if ( $(this).children().size() == 0 ) {
					width = $(this).outerWidth();
				} else {
					width =  $(this).glamourWidth();
					width = ( width > $(this).width() ? width : $(this).width());
					width +=$.glamourWidth.outerWidth($(this));
				}
				totalWidth +=width;
			});
			
			return totalWidth;
		}
	})(jQuery);
		
	var Glamour = {};
	
	Glamour.resize = function() {
		$("body > .sgl-table, body > .finder-container").each(function() {
			$(this).height($(window).height() - 20);
		});
	};

	$(Glamour.resize);
	$(window).resize(Glamour.resize);'
]

{ #category : #uploaded }
SGLFileLibrary >> mbMenuCss [
	^ '/*
* jQuery.mb.components: jquery.mb.menu
* © 2001 - 2010 Matteo Bicocchi (pupunzi), Open Lab
*
*/

@charset "UTF-8";

body{
  font-family:"Lucida Sans Unicode","Lucida Grande",Helvetica,Arial,sans-serif;
  font-size:14px;
  color:gray;
}
.mbmenu{
  display:none;
}
.rootVoices{
}
.rootVoices td.rootVoice {
  vertical-align:middle;
/*background-color:#fff;*/
  width:120px;
  font-family:Arial,Helvetica,sans-serif;
  text-shadow:#fff 1px 1px 1px;  
  color: gray;
  font-size:14px;
  line-height:18px;
  padding:8px;
  cursor: pointer;
}

.rootVoices td.rootVoice.selected{
  background: black url("../images/bgnd_sel_4.png");
  padding:8px;
  color:#ffffff;
  cursor: pointer;
  font-size:14px;
  text-shadow:#660033 1px 1px 1px;
  /*
    -moz-box-shadow:#999 2px 2px 10px;
    -webkit-box-shadow:#999 2px 2px 10px;
  */
  -moz-border-radius:8px 8px 0 0px;
  -webkit-border-top-right-radius:8px;
  -webkit-border-top-left-radius:8px;
  -webkit-border-bottom-right-radius:0px;
  -webkit-border-bottom-left-radius:0px;

}
.rootVoices td.rootVoice.disabled.selected{
  background:#999!important;
  color:#666;
  text-shadow:#ddd 1px 1px 1px;
}

.rootVoices.vertical {
  width:140px;
}
.rootVoices.vertical td.rootVoice{
  -moz-border-radius:8px 0px 0 8px;
  -webkit-border-top-right-radius:0px;
  -webkit-border-top-left-radius:8px;
  -webkit-border-bottom-right-radius:0px;
  -webkit-border-bottom-left-radius:8px;
}

/**/

.menuContainer{
/*overflow:hidden;*/
  position:absolute;
  background-color:gray;
  border-top:5px solid black;
  padding:0;
  -moz-box-shadow:#999 2px 2px 10px;
  -webkit-box-shadow:#999 2px 2px 10px;
  box-shadow:#999 2px 2px 10px;
  -moz-border-radius: 0 0 8px 8px;
  -webkit-border-top-right-radius:0px;
  -webkit-border-top-left-radius:0px;
  -webkit-border-bottom-right-radius:8px;
  -webkit-border-bottom-left-radius:8px;
}
.menuContainer.submenuContainer{
  border-top:none!important;
}

.menuContainer.disabled{
  border-top:5px solid #999;
  background-color:gray;
}
.menuContainer .line{
  background-color:transparent;
  width:100%;
}
.menuContainer .line.title {
  background-color:black;
  font-family:Arial,Helvetica,sans-serif;
  font-size:14px;
/*border-bottom:1px solid black;*/
}
.menuContainer.disabled .line.title {
  background-color:#999;
}
.menuContainer .line.title a{
  font-size:14px;
  color:#ccc;
}
.menuContainer.disabled .line.title a{
  font-size:14px;
  color:#666;
  text-shadow:#999 1px 1px 1px;
}
.menuContainer td a{
  text-decoration:none;
  color:#f3f3f3;
  text-shadow:#666 1px 1px 1px;
}
.menuContainer td.voice{
  font-family:Arial,Helvetica,sans-serif;
  font-size:14px;
  padding:7px;
}
.menuContainer .separator{
  background-color:#999;
  height:1px;
  padding:0;
  margin:0;
}
.menuContainer td.img{
  font-family:Arial,Helvetica,sans-serif;
  text-align:center;
  font-size:12px;
  color: #c3c3c3;
  background-color:transparent;
  width:24px;
  padding:5px;
}
.menuContainer td.img img{
  width:20px;
}
.menuContainer .textBox{
  padding: 10px;
  font-family:Arial,Helvetica,sans-serif;
  font-size:12px;
  color: #c3c3c3;
}
.menuContainer .selected td{
  background-color:#f3f3f3;
  background-image:url("../images/bgnd_sel_2.jpg")
}
.menuContainer .selected td a{
  color:#000;
  text-shadow:#fff 2px 2px 1px;
  display:block;
}
.menuContainer .disabled td, .menuContainer .disabled td a {
  color:#555;
  text-shadow:#999 1px 1px 1px;
}
.menuContainer .subMenuOpener{
  background-image:url("../images/menuArrow_w.gif");
  background-repeat:no-repeat;
  background-position:right;
}
.menuContainer .selected .subMenuOpener{
  background-image:url("../images/menuArrow.gif");
  background-repeat:no-repeat;
  background-position:right;
}

/*BOX MENU*/

.boxMenu{
  color:#f3f3f3;
  border-top:8px solid black;
  background:url("../images/box_top.png") repeat-x;
}
.boxMenu h4{
  white-space:nowrap;
  margin:0 0 20px 0;
  padding:3px;
  font:18px/20px georgia, serif;
  padding-right:20px;
  text-shadow:#666 2px 2px 1px;
}

.boxMenu td{
  min-width:160px;
  vertical-align:top;
  border-right:1px solid #999;
}
.boxMenu td:hover{
  background:url(../images/box_menu_over.png);
  -moz-box-shadow:#666 2px 2px 4px;
  -webkit-box-shadow:#666 2px 2px 4px;
}

.boxMenu td:hover a{
  margin-right:3px;
  text-shadow:#fff 1px 1px 1px;
  color:#000;
}

.boxMenu td:last-child{
  min-width:160px;
  vertical-align:top;
  border-right:none;
}

.boxMenu a{
  font-size:14px;
  white-space:nowrap;
  display:block;
  padding:5px;
  margin-bottom:5px;
}

.boxMenu a img{
  padding-right:5px;
}

.boxMenu a:hover{
  color:#000;
  text-shadow:#fff 2px 2px 1px;
  background-image:url("../images/bgnd_sel_2.jpg");
  -moz-box-shadow:#666 2px 2px 4px;
  -webkit-box-shadow:#666 2px 2px 4px;
}

.boxMenu a img{
  border:0;
}
'
]

{ #category : #uploaded }
SGLFileLibrary >> scrollToJs [
	^ '/**
 * jQuery.ScrollTo
 * Copyright (c) 2007-2009 Ariel Flesler - aflesler(at)gmail(dot)com | http://flesler.blogspot.com
 * Dual licensed under MIT and GPL.
 * Date: 5/25/2009
 *
 * @projectDescription Easy element scrolling using jQuery.
 * http://flesler.blogspot.com/2007/10/jqueryscrollto.html
 * Works with jQuery +1.2.6. Tested on FF 2/3, IE 6/7/8, Opera 9.5/6, Safari 3, Chrome 1 on WinXP.
 *
 * @author Ariel Flesler
 * @version 1.4.2
 *
 * @id jQuery.scrollTo
 * @id jQuery.fn.scrollTo
 * @param {String, Number, DOMElement, jQuery, Object} target Where to scroll the matched elements.
 *	  The different options for target are:
 *		- A number position (will be applied to all axes).
 *		- A string position (''44'', ''100px'', ''+=90'', etc ) will be applied to all axes
 *		- A jQuery/DOM element ( logically, child of the element to scroll )
 *		- A string selector, that will be relative to the element to scroll ( ''li:eq(2)'', etc )
 *		- A hash { top:x, left:y }, x and y can be any kind of number/string like above.
*		- A percentage of the container''s dimension/s, for example: 50% to go to the middle.
 *		- The string ''max'' for go-to-end. 
 * @param {Number} duration The OVERALL length of the animation, this argument can be the settings object instead.
 * @param {Object,Function} settings Optional set of settings or the onAfter callback.
 *	 @option {String} axis Which axis must be scrolled, use ''x'', ''y'', ''xy'' or ''yx''.
 *	 @option {Number} duration The OVERALL length of the animation.
 *	 @option {String} easing The easing method for the animation.
 *	 @option {Boolean} margin If true, the margin of the target element will be deducted from the final position.
 *	 @option {Object, Number} offset Add/deduct from the end position. One number for both axes or { top:x, left:y }.
 *	 @option {Object, Number} over Add/deduct the height/width multiplied by ''over'', can be { top:x, left:y } when using both axes.
 *	 @option {Boolean} queue If true, and both axis are given, the 2nd axis will only be animated after the first one ends.
 *	 @option {Function} onAfter Function to be called after the scrolling ends. 
 *	 @option {Function} onAfterFirst If queuing is activated, this function will be called after the first scrolling ends.
 * @return {jQuery} Returns the same jQuery object, for chaining.
 *
 * @desc Scroll to a fixed position
 * @example $(''div'').scrollTo( 340 );
 *
 * @desc Scroll relatively to the actual position
 * @example $(''div'').scrollTo( ''+=340px'', { axis:''y'' } );
 *
 * @dec Scroll using a selector (relative to the scrolled element)
 * @example $(''div'').scrollTo( ''p.paragraph:eq(2)'', 500, { easing:''swing'', queue:true, axis:''xy'' } );
 *
 * @ Scroll to a DOM element (same for jQuery object)
 * @example var second_child = document.getElementById(''container'').firstChild.nextSibling;
 *			$(''#container'').scrollTo( second_child, { duration:500, axis:''x'', onAfter:function(){
 *				alert(''scrolled!!'');																   
 *			}});
 *
 * @desc Scroll on both axes, to different values
 * @example $(''div'').scrollTo( { top: 300, left:''+=200'' }, { axis:''xy'', offset:-20 } );
 */
;(function( $ ){
	
	var $scrollTo = $.scrollTo = function( target, duration, settings ){
		$(window).scrollTo( target, duration, settings );
	};

	$scrollTo.defaults = {
		axis:''xy'',
		duration: parseFloat($.fn.jquery) >= 1.3 ? 0 : 1
	};

	// Returns the element that needs to be animated to scroll the window.
	// Kept for backwards compatibility (specially for localScroll & serialScroll)
	$scrollTo.window = function( scope ){
		return $(window)._scrollable();
	};

	// Hack, hack, hack :)
	// Returns the real elements to scroll (supports window/iframes, documents and regular nodes)
	$.fn._scrollable = function(){
		return this.map(function(){
			var elem = this,
				isWin = !elem.nodeName || $.inArray( elem.nodeName.toLowerCase(), [''iframe'',''#document'',''html'',''body''] ) != -1;

				if( !isWin )
					return elem;

			var doc = (elem.contentWindow || elem).document || elem.ownerDocument || elem;
			
			return $.browser.safari || doc.compatMode == ''BackCompat'' ?
				doc.body : 
				doc.documentElement;
		});
	};

	$.fn.scrollTo = function( target, duration, settings ){
		if( typeof duration == ''object'' ){
			settings = duration;
			duration = 0;
		}
		if( typeof settings == ''function'' )
			settings = { onAfter:settings };
			
		if( target == ''max'' )
			target = 9e9;
			
		settings = $.extend( {}, $scrollTo.defaults, settings );
		// Speed is still recognized for backwards compatibility
		duration = duration || settings.speed || settings.duration;
		// Make sure the settings are given right
		settings.queue = settings.queue && settings.axis.length > 1;
		
		if( settings.queue )
			// Let''s keep the overall duration
			duration /= 2;
		settings.offset = both( settings.offset );
		settings.over = both( settings.over );

		return this._scrollable().each(function(){
			var elem = this,
				$elem = $(elem),
				targ = target, toff, attr = {},
				win = $elem.is(''html,body'');

			switch( typeof targ ){
				// A number will pass the regex
				case ''number'':
				case ''string'':
					if( /^([+-]=)?\d+(\.\d+)?(px|%)?$/.test(targ) ){
						targ = both( targ );
						// We are done
						break;
					}
					// Relative selector, no break!
					targ = $(targ,this);
				case ''object'':
					// DOMElement / jQuery
					if( targ.is || targ.style )
						// Get the real position of the target 
						toff = (targ = $(targ)).offset();
			}
			$.each( settings.axis.split(''''), function( i, axis ){
				var Pos	= axis == ''x'' ? ''Left'' : ''Top'',
					pos = Pos.toLowerCase(),
					key = ''scroll'' + Pos,
					old = elem[key],
					max = $scrollTo.max(elem, axis);

				if( toff ){// jQuery / DOMElement
					attr[key] = toff[pos] + ( win ? 0 : old - $elem.offset()[pos] );

					// If it''s a dom element, reduce the margin
					if( settings.margin ){
						attr[key] -= parseInt(targ.css(''margin''+Pos)) || 0;
						attr[key] -= parseInt(targ.css(''border''+Pos+''Width'')) || 0;
					}
					
					attr[key] += settings.offset[pos] || 0;
					
					if( settings.over[pos] )
						// Scroll to a fraction of its width/height
						attr[key] += targ[axis==''x''?''width'':''height'']() * settings.over[pos];
				}else{ 
					var val = targ[pos];
					// Handle percentage values
					attr[key] = val.slice && val.slice(-1) == ''%'' ? 
						parseFloat(val) / 100 * max
						: val;
				}

				// Number or ''number''
				if( /^\d+$/.test(attr[key]) )
					// Check the limits
					attr[key] = attr[key] <= 0 ? 0 : Math.min( attr[key], max );

				// Queueing axes
				if( !i && settings.queue ){
					// Don''t waste time animating, if there''s no need.
					if( old != attr[key] )
						// Intermediate animation
						animate( settings.onAfterFirst );
					// Don''t animate this axis again in the next iteration.
					delete attr[key];
				}
			});

			animate( settings.onAfter );			

			function animate( callback ){
				$elem.animate( attr, duration, settings.easing, callback && function(){
					callback.call(this, target, settings);
				});
			};

		}).end();
	};
	
	// Max scrolling position, works on quirks mode
	// It only fails (not too badly) on IE, quirks mode.
	$scrollTo.max = function( elem, axis ){
		var Dim = axis == ''x'' ? ''Width'' : ''Height'',
			scroll = ''scroll''+Dim;
		
		if( !$(elem).is(''html,body'') )
			return elem[scroll] - $(elem)[Dim.toLowerCase()]();
		
		var size = ''client'' + Dim,
			html = elem.ownerDocument.documentElement,
			body = elem.ownerDocument.body;

		return Math.max( html[scroll], body[scroll] ) 
			 - Math.min( html[size]  , body[size]   );
			
	};

	function both( val ){
		return typeof val == ''object'' ? val : { top:val, left:val };
	};

})( jQuery );'
]

{ #category : #uploaded }
SGLFileLibrary >> styleCss [
	^ '/* html */
* {margin:0; padding:0;}

html, body {
	overflow: hidden;
	height: 100%;
}

body {
	font-size: 0.8em;
	margin: 8px;
}

body, table, td, th, input, select, textarea, button {
	font-family: Verdana, Arial, sans-serif;
}
input, select, textarea {
	outline: 0;
	margin: 0;
	padding: 0;
	width: 100%;
	height: 100%;
	border: none;
	outline: none;
	display: block;
	background-color: transparent;
}

/* layout */

.finder-container {
	overflow-x: auto;
	overflow-y: hidden;
	height: 100%;
}

div.finder {
	width: 100%;
	height: 98%;
	overflow-x: auto;
	position: relative;
	display: -webkit-box; display: -moz-box; display: box;
	-webkit-box-align: stretch; -moz-box-align: stretch; box-align: stretch;
	-webkit-box-orient: horizontal; -moz-box-orient: horizontal; box-orient: horizontal;
}
div.finder > div.finder-pane {
	min-width: 150px;
	max-width: 500px;
	height: 100%;
	width: 100%;
	display: -webkit-box; display: -moz-box; display: box;
	-webkit-box-align: stretch; -moz-box-align: stretch; box-align: stretch;
	-webkit-box-orient: horizontal; -moz-box-orient: horizontal; box-orient: horizontal;
	margin-right: 5px;
}

div.finder-pane > * {
	overflow: auto;
	width: auto;
	height: 100%;
	max-width: 500px;
	-webkit-box-flex: 1; -moz-box-flex: 1; box-flex: 1;
}

/* jquery ui */
.ui-tabs {
	position: relative;
	display: -webkit-box; display: -moz-box; display: box;
	-webkit-box-align: stretch; -moz-box-align: stretch; box-align: stretch;
	-webkit-box-orient: vertical; -moz-box-orient: vertical; box-orient: vertical;
}
.ui-tabs > .ui-tabs-nav {
	-webkit-box-flex: 0; -moz-box-flex: 0; box-flex: 0;
}
.ui-tabs > .ui-tabs-panel {
	padding: 0;
	position: relative;
	-webkit-box-flex: 1; -moz-box-flex: 1; box-flex: 1;
	display: -webkit-box; display: -moz-box; display: box;
	-webkit-box-align: stretch; -moz-box-align: stretch; box-align: stretch; 
	/* -webkit-box-orient: vertical; -moz-box-orient: vertical; box-orient: vertical; */
}

.ui-tabs-panel > * {
	-webkit-box-flex: 1; -moz-box-flex: 1; box-flex: 1;
}

.ui-tabs-nav {
	min-height: 38px;
}

.glm-tabs-close-button {
	height: 16px;
	width: 16px;
	float: left;
	background-image: url("closeButton.png");
	background-repeat: no-repeat;
	margin-top: 2px;
	cursor: pointer;
}

.ui-state-default > .glm-tabs-close-button {
	visibility: hidden;
}

.ui-state-hover > .glm-tabs-close-button {
	visibility: visible;
}

/* presentations */

.empty-presentation{
	min-height:50px;
}

.presentation-container {
	
}

.presentation-container > * {
	-webkit-box-flex: 1; -moz-box-flex: 1; box-flex: 1;
}

.list-presentation {
	display: -webkit-box; display: -moz-box; display: box;
	-webkit-box-align: stretch; -moz-box-align: stretch; box-align: stretch;
	-webkit-box-orient: vertical; -moz-box-orient: vertical; box-orient: vertical;
	-webkit-box-flex: 1; -moz-box-flex: 1; box-flex: 1;
}

.list-presentation > ul {
	-webkit-box-flex: 1; -moz-box-flex: 1; box-flex: 1;
	overflow: auto;
	min-height: 100px;
	min-width: 100px;
}

.list-presentation > ul > li {
	-webkit-box-flex: 1; -moz-box-flex: 1; box-flex: 1;
}

.list-presentation > input {
	height: 25px;
	background-color: #EBEBEB;
	-webkit-box-flex: 0; -moz-box-flex: 0; box-flex: 0;
}

.ui-accordion-content > * {
	-webkit-box-flex: 1; -moz-box-flex: 1; box-flex: 1;
}


/* presentations with title */

.presentation-with-title, .presentation-content {
	position: relative;
	display: -webkit-box; display: -moz-box; display: box;
	-webkit-box-align: stretch; -moz-box-align: stretch; box-align: stretch;
	-webkit-box-orient: vertical; -moz-box-orient: vertical; box-orient: vertical;
}

.presentation-with-title {
	padding: 0.2em;
}

.presentation-title {
	display: block;
	border: 1px solid #4297D7;
	background: #E1E1E1;
	padding: 0.2em 0.2em 0;
}

.presentation-title {
	-webkit-box-flex: 0; -moz-box-flex: 0; box-flex: 0;
}

.presentation-title a, .presentation-title a:visited, .presentation-title a:link {
	color: #2E6E9E;
}

.presentation-title li {
	border-bottom:0 none !important;
	list-style:none outside none;
	margin:0 0.2em 1px 0;
	padding:0;
	position:relative;
	top:1px;
	white-space:nowrap;
}

.presentation-title .ui-state-default {
	float:left;
}

.presentation-content {
	padding: 0;
	-webkit-box-flex: 1; -moz-box-flex: 1; box-flex: 1;
	background: none repeat scroll 0 0 transparent;
	border-width: 0;
}

.presentation-content > div {
	-webkit-box-flex: 1; -moz-box-flex: 1; box-flex: 1;
}


/* composite arrangements */
.stacked-arrangement, .tabbed-arrangement, .accordion-arrangement {
	position: relative;
	width: 100%;
	padding: 0;
}

.stacked-arrangement, .accordion-arrangement {
	position: relative;
	display: -webkit-box; display: -moz-box; display: box;
	-webkit-box-align: stretch; -moz-box-align: stretch; box-align: stretch;
	-webkit-box-orient: vertical; -moz-box-orient: vertical; box-orient: vertical;
}

.stacked-arrangement {
	overflow-y: auto;
}

.stacked-arrangement > *{
	-webkit-box-flex: 1; -moz-box-flex: 1; box-flex: 1;
	height: 0;
}

.accordion-arrangement > .ui-accordion-content {
	-webkit-box-flex: 1; -moz-box-flex: 1; box-flex: 1;
	display: -webkit-box; display: -moz-box; display: box;
}

/* List/tree presentation */

.glm-tree-root-ct > .glm-tree-node {
	margin-top: 1px;
}

.glm-tree-node-selected > .glm-tree-node-el{
	background-color: #E3E0D0;
}

.glm-tree-icon-padding {
	background-repeat:no-repeat;
	border:0 none;
	height:18px;
	margin:0;
	padding:0;
	vertical-align:top;
	width:16px;
	display:inline-block;
	text-decoration:none;
}

.glm-tree-root-ct .glm-tree-icon {
	display:inline-block;
	height:18px;
	margin:0;
	padding:0;
	text-decoration:none;
	width:14px;
}

.glm-tree-node-el {
	cursor: pointer;
}

.glm-tree-node-el > .glm-tree-icon  {
	background-image:url("arrows.png");
	background-repeat:no-repeat;
}

.glm-tree-closed > .glm-tree-node-el > .glm-tree-icon {
	background-position: -4px 0;
}

.glm-tree-open > .glm-tree-node-el > .glm-tree-icon {
	background-position: -22px 0;
}

/* Mondrian presentation */
.glm-mondrian-presentation{
	position: relative;
	overflow: auto;
	-webkit-box-flex: 1; -moz-box-flex: 1; box-flex: 1;
}

.glm-mondrian-presentation > img{
	position: absolute;
}

/* Text presentation */
.glm-text-presentation, .glm-empty-presentation {
	position: relative;
	display: -webkit-box; display: -moz-box; display: box;
	min-height: 150px;
}

/* Actions */

.glm-actions {
	float: right;
	width: 78px;
}

.glm-ac-container {
	float: right;
	cursor: pointer;
	min-height: 28px;
	margin-top: 2px;
	margin-right:3px;
}

.glm-ac-container-menu {
	float: right;
	margin-top: 3px;
}

.ui-state-default > .glm-ac-container {
	display: none;
}

.ui-tabs-selected > .glm-ac-container {
	display: block;
}

.glm-ac-container > img {
	margin-right: 2px;
	float: left;
	max-width: 28px;
}

.ui-accordion .ui-state-active a {
	display: inline;
	position: absolute;
	margin-top: -15px;
	top: 50%;
}

/* Tags */
.glm-tree-tags, .glm-tree-tag {
	display: inline;
}

.glm-tree-tags {
	padding-left: 2px;
}

.glm-tree-tag {
	margin-left: 3px;
	background-color: #808080;
}

.glm-tree-tag-selected {
	background-color: #BFBFBF;
}

/* table layout */
.sgl-table {
	width: 100%;	
	position: relative;
}

.sgl-table-hbox, 
.sgl-table-hbox > *,
.sgl-table-vbox > * {
	position: relative;
	display: -webkit-box; display: -moz-box; display: box;
	-webkit-box-align: stretch; -moz-box-align: stretch; box-align: stretch;
	-webkit-box-orient: horizontal; -moz-box-orient: horizontal; box-orient: horizontal;
}

.sgl-table-hbox > *, 
.sgl-table-hbox > * > *,
.sgl-table-vbox > * > * {
	-webkit-box-flex: 1; -moz-box-flex: 1; box-flex: 1;
}

.sgl-table-vbox {
	position: relative;
	display: -webkit-box; display: -moz-box; display: box;
	-webkit-box-orient: vertical; -moz-box-orient: vertical; box-orient: vertical;
	-webkit-box-align: stretch; -moz-box-align: stretch; box-align: stretch;
}

.sgl-table-vbox > * {
	-webkit-box-flex: 1; -moz-box-flex: 1; box-flex: 1;
}

.sgl-table-split {
	width: 5px; height: 5px;
	-webkit-box-flex: 0; -moz-box-flex: 0; box-flex: 0;
}

/* magritte layout */
div.magritte { width: 100%; }
div.magritte th { width: 150px; }
div.magritte textarea { height: 250px; }
div.magritte table { width: 100%; padding: .3em 1em 0 .4em; }
div.magritte input, div.magritte textarea { width: 100%; border: 1px solid #d3d3d3; background: #e6e6e6; }
div.magritte .buttons { text-align: right; border-width: 1px 0 0 0; margin: .5em 0 0 0; padding: .3em 1em .5em .4em; }
div.magritte .submit { display: inline; margin: .5em .4em .5em 0; cursor: pointer; padding: .2em .6em .3em .6em; line-height: 1.4em; width: auto; overflow: visible; border: 1px solid #d3d3d3; background: #e6e6e6 url(/seaside/files/JQUiSmoothnessTheme/uibgglass75e6e6e61x400.png) 50% 50% repeat-x; font-weight: normal; color: #555555; outline: none; }'
]
