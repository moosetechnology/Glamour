"
asdasd
a
sd
asd

"
Class {
	#name : #GLMCompositeBrick,
	#superclass : #GLMBrick,
	#category : #'Glamour-Morphic-Brick-Phlow'
}

{ #category : #examples }
GLMCompositeBrick class >> exampleList [
	<example: 'Phlowr simple list'>
	|composite|
	
	composite := self new.
	composite list
		title: 'Example';
		display: [ :x | x + 3 ];
		format: [ :anInteger | anInteger asString, ')' ];
		entity: (1 to: 100).
	
	composite asBrickedMorph
		extent: 600@400;
		openInWindow
]

{ #category : #examples }
GLMCompositeBrick class >> exampleListWithCustomItem [
	<example: 'Phlowr list with custom items'>
	|composite|
	
	composite := self new.
	composite list
		title: 'Example with custom items';
		display: [ :x | x + 3];
		format: [ :anInteger | anInteger asString ];
		styled: [ :aBrick | aBrick textPosition: #center; textColor: Color random ];
		entity: (1 to: 100).
	
	composite asBrickedMorph
		extent: 600@400;
		openInWindow
]

{ #category : #examples }
GLMCompositeBrick class >> examplePharoMethod [
	<example: 'Phlowr Pharo method'>
	|composite|
	
	composite := self new.
	composite pharoMethod
		title: #printString;
		display: #getSource;
		smalltalkClass: #methodClass;
		entity: Morph>>#bounds.
	
	composite asBrickedMorph
		extent: 600@400;
		openInWindow
]

{ #category : #examples }
GLMCompositeBrick class >> exampleTable [
	<example: 'Phlowr table'>
	|composite|
	
	composite := self new.
	composite table
		title: #asString;
		display: [ :anObject | (anObject gtInspectorVariableValuePairs asSortedCollection asOrderedCollection yourself) addFirst: 'self' -> anObject; yourself ];
		column: 'Variable'
			evaluated: [:assoc |	GTObjectPrinter new asNonTruncatedTextFrom: assoc key ]
			styled: [ :aBrick | aBrick textPosition: #rightCenter; margin: #(0 15 0 0); textColor: Color lightGray ];
		column: 'Variable'
			evaluated: [:assoc | GTObjectPrinter new asTruncatedTextFrom: assoc value ]
			styled: [ :aBrick | aBrick margin: #(0 0 0 15) ];
		entity: Morph new.
	
	composite asBrickedMorph
		color: Color white;
		extent: 600@400;
		openInWindow
]

{ #category : #examples }
GLMCompositeBrick class >> exampleTransmission [
	<example: 'Table transmission'>
	|first second|
	first := GLMLabelBrick new.
	second := GLMLabelBrick new.
	
	(first transmit)
		from: #yourself slot: #brickBounds;
		to: #label port: #text:;
		when: [ :value | value extent > (250@150) ];
		transformed: [ :value | 'resize me! ', value asString ].
		
	(first transmit)
		from: #label slot: #text;
		to: second port: #text:;
		transformed: [ :value | 'Do not ', value asString ];
		with: [ :label |
			label
				color: Color random muchLighter;
				changed ].
		
	(second 
		textPosition: #center;
		color: Color lightBlue)
			asBrickedMorph
			extent: 300@100;
			openInWindow.
			
	(first 
		textPosition: #center;
		color: Color lightGreen)
			asBrickedMorph
			extent: 300@200;
			openInWindow
]

{ #category : #phlowr }
GLMCompositeBrick >> list [

	^ self addBrickBack: GLMPhlowrListBrick new
]

{ #category : #phlowr }
GLMCompositeBrick >> pharoMethod [

	^ self addBrickBack: GLMPhlowrPharoMethodBrick new
]

{ #category : #phlowr }
GLMCompositeBrick >> table [

	^ self addBrickBack: GLMPhlowrTableBrick new
]

{ #category : #phlowr }
GLMCompositeBrick >> tree [
]
