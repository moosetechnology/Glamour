Class {
	#name : #GLMMorphicAccumulatorRenderer,
	#superclass : #GLMMorphicBrowserRenderer,
	#category : #'Glamour-Morphic-Renderer'
}

{ #category : #rendering }
GLMMorphicAccumulatorRenderer >> render: aBrowser [

	| tabs |
	aBrowser panes isEmpty ifTrue: [ ^ GLMMorphic emptyMorph ].
"	presentations size = 1 ifTrue: [ 
		^ self morph: (self render: presentations first) withTitleOrNilOf: aCompositePresentation ].
"	tabs := LazyTabGroupMorph new.
	tabs
		vResizing: #spaceFill;
		hResizing: #spaceFill;
		cornerStyle: (self theme tabGroupCornerStyleIn: nil);
		font: self theme labelFont.
	tabs announcer when: LazyTabPageChanged do: [:ann |  
			aBrowser activeEntity: ((aBrowser panes at: ann pageIndex) port: #entity) value ].
	aBrowser panes do: [ :each | 
		tabs 
			addLazyPage: [ self renderPaneWithoutTitle: each ]
			label: (self titleOrIconOf: each presentations in: tabs) ].
	aBrowser 
		when: GLMPaneSelected
		do: [ :ann | 
			tabs selectedPageIndex: ann position ].
	aBrowser 
		when: GLMPaneAdded
		do: [ :ann | 
			tabs addLazyPage: (self renderPaneWithoutTitle: ann pane) label: (self titleOrIconOf: ann pane presentations in: tabs).
			tabs selectedPageIndex: tabs pages size ].
	tabs selectedPageIndex: tabs pages size.
	^ tabs
]
